- content_for :meta_title, t(:browse)

= markdown Zone.default&.body

.row
  .col-lg-8.pb-3
    - if Zone.default && !Zone.default.nodes.empty?
      %h2= Node.model_name.human.pluralize

      .small.text-muted.pb-1
        = surround '(', ')' do
          = t :total_numbered, count: Zone.default.nodes.count

      %table{ data: { 'sort-name': 'code' }.merge(searchable_table) }
        %thead
          %tr
            %th{ data: { field: 'code' }.merge(sortable_row) } Code
            %th{ data: { field: 'name' }.merge(sortable_row) } Name
        %tbody
          - Zone.default.nodes.order(code: :asc).each do |node|
            %tr
              %td= link_to h(node.display_code), url_for(node)
              %td= link_to h(node.name), url_for(node)

  .col-lg-4
    - unless user_signed_in?
      %h2= t :join_us

      %ul
        %li= link_to t(:sign_in), user_session_path
        %li= link_to t(:sign_up), new_user_registration_path

    - if user_signed_in?
      = render partial: 'my_things'

    - unless Group.all.empty?
      %h2= Group.model_name.human.pluralize

      .small.text-muted.pb-1
        = surround '(', ')' do
          = t :total_numbered, count: Group.count

      %ul
        - Group.all.order(name: :asc).each do |group|
          %li
            = link_to h(group.name), url_for(group)

    - unless User.visible.empty?
      %h2= User.model_name.human.pluralize

      .small.text-muted.pb-1
        = surround '(', ')' do
          = succeed(',') do
            = t :total_numbered, count: User.count
          = t :visible_numbered, count: User.visible.count

      %ul
        - User.visible.order(name: :asc).each do |user|
          %li
            = link_to h(user.name), url_for(user)

    - unless DeviceType.all.empty?
      %h2= DeviceType.model_name.human.pluralize

      .small.text-muted.pb-1
        = surround '(', ')' do
          = t :total_numbered, count: DeviceType.count

      %ul
        - DeviceType.all.order(:name).each do |device_type|
          %li
            = link_to h(device_type.name), url_for(device_type)

    - unless Network.all.empty?
      %h2= Network.model_name.human.pluralize

      .small.text-muted.pb-1
        = surround '(', ')' do
          = t :total_numbered, count: Network.count

      %ul
        - Network.all.order(name: :asc).each do |network|
          %li
            = link_to h(network.name), url_for(network)

    - unless Status.all.empty?
      %h2= Status.model_name.human.pluralize

      .small.text-muted.pb-1
        = surround '(', ')' do
          = t :total_numbered, count: Status.count

      %ul
        - Status.all.order(name: :asc).each do |status|
          %li
            = link_to h(status.name), url_for(status)
